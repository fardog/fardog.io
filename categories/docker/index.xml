<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on fardog.io</title><link>https://fardog.io/categories/docker/</link><description>Recent content in Docker on fardog.io</description><generator>Hugo</generator><language>en-us</language><copyright>Â© 2024 Nathan Wittstock</copyright><lastBuildDate>Mon, 01 Jan 2018 15:27:00 -0800</lastBuildDate><atom:link href="https://fardog.io/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Docker containers with systemd</title><link>https://fardog.io/blog/2017/12/30/running-docker-containers-with-systemd/</link><pubDate>Sat, 30 Dec 2017 18:10:00 -0800</pubDate><guid>https://fardog.io/blog/2017/12/30/running-docker-containers-with-systemd/</guid><description>Services in Docker containers can easily be run under systemd, but I had some difficulty finding good examples of how to do so. Here&amp;rsquo;s what I came up with.
This example is a container running nginx, which has access to letsencrypt certificates, but could be adapted to any service. I&amp;rsquo;ve annotated lines below:
[Unit] Description=nginx (Docker) # start this unit only after docker has started After=docker.service Requires=docker.service [Service] TimeoutStartSec=0 Restart=always # The following lines start with &amp;#39;-&amp;#39; because they are allowed to fail without # causing startup to fail.</description></item></channel></rss>