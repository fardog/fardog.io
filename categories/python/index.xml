<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on fardog.io</title><link>https://fardog.io/categories/python/</link><description>Recent content in Python on fardog.io</description><generator>Hugo</generator><language>en-us</language><copyright>Nathan Wittstock</copyright><lastBuildDate>Sat, 16 Feb 2013 14:44:00 -0700</lastBuildDate><atom:link href="https://fardog.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Making noise in Python</title><link>https://fardog.io/blog/2013/02/16/making-noise-in-python/</link><pubDate>Sat, 16 Feb 2013 14:44:00 -0700</pubDate><guid>https://fardog.io/blog/2013/02/16/making-noise-in-python/</guid><description>I&amp;rsquo;ve been working with PyAudio lately, on a project to synchronize sound streams across multiple devices. Nothing to say on that front yet, but I do have a nice snippet for programatically generating a tone:
import math import numpy import pyaudio def sine(frequency, length, rate): length = int(length * rate) factor = float(frequency) * (math.pi * 2) / rate return numpy.sin(numpy.arange(length) * factor) def play_tone(stream, frequency=440, length=1, rate=44100): chunks = [] chunks.</description></item><item><title>Simple 'workon' Command for fish shell</title><link>https://fardog.io/blog/2013/02/15/simple-workon-command-for-fish-shell/</link><pubDate>Fri, 15 Feb 2013 00:15:00 -0700</pubDate><guid>https://fardog.io/blog/2013/02/15/simple-workon-command-for-fish-shell/</guid><description>I put together a quick workon clone for the fish&amp;rsquo;s fish shell. Definitely nothing as complete or useful as virtualenvwrapper, but it fixes my need: switching simply between virtualenv&amp;rsquo;s and projects.
Installation First, create a function file ~/.config/fish/functions/workon.fish with this defintion:
function workon -d &amp;#34;Activate virtual environment in $WORKON_HOME&amp;#34; set tgt {$WORKON_HOME}/$argv[1] if [ -d $tgt ] cd $tgt # deactivate any active venv, and activate the target # this needs to be rewritten with the `type` fish command if test -n &amp;#34;$VIRTUAL_ENV&amp;#34; deactivate end .</description></item></channel></rss>